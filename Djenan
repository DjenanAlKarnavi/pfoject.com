### 1. **Quote Calculation Logic in InsureeController**

 

Assume your `Insuree` model has these properties:  

- DateOfBirth (DateTime)  

- CarYear (int)  

- CarMake (string)  

- CarModel (string)  

- SpeedingTickets (int)  

- DUI (bool)  

- CoverageType (string, e.g., "Full" or "Liability")  

- Quote (decimal)  

 

**In the POST Create action:**

 

```csharp

[HttpPost]

[ValidateAntiForgeryToken]

public ActionResult Create(Insuree insuree)

{

    // Start with base price

    decimal quote = 50m;

 

    // Calculate age

    int age = DateTime.Now.Year - insuree.DateOfBirth.Year;

    if (insuree.DateOfBirth > DateTime.Now.AddYears(-age)) age--;

 

    // Age logic

    if (age <= 18)

        quote += 100m;

    else if (age >= 19 && age <= 25)

        quote += 50m;

    else // 26 or older

        quote += 25m;

 

    // Car year logic

    if (insuree.CarYear < 2000)

        quote += 25m;

    if (insuree.CarYear > 2015)

        quote += 25m;

 

    // Car make/model logic

    if (!string.IsNullOrEmpty(insuree.CarMake) && insuree.CarMake.ToLower() == "porsche")

    {

        quote += 25m;

        if (!string.IsNullOrEmpty(insuree.CarModel) && insuree.CarModel.ToLower() == "911 carrera")

        {

            quote += 25m; // Additional for this specific model

        }

    }

 

    // Speeding tickets

    quote += insuree.SpeedingTickets * 10m;

 

    // DUI adjustment

    if (insuree.DUI)

        quote *= 1.25m;

 

    // Full coverage adjustment

    if (!string.IsNullOrEmpty(insuree.CoverageType) && insuree.CoverageType.ToLower() == "full")

        quote *= 1.5m;

 

    // Assign the calculated quote to the model

    insuree.Quote = quote;

 

    if (ModelState.IsValid)

    {

        db.Insurees.Add(insuree);

        db.SaveChanges();

        return RedirectToAction("Index");

    }

 

    return View(insuree);

}

```

 

---

 

### 2. **Hide the “Quote” Field in the Create View**

 

Open `Create.cshtml` under Views/Insuree.  

Remove or comment out the block that displays the Quote field:

 

```html

<!-- Remove or comment out this section -->

@* 

<div class="form-group">

    @Html.LabelFor(model => model.Quote, htmlAttributes: new { @class = "control-label col-md-2" })

    <div class="col-md-10">

        @Html.EditorFor(model => model.Quote, new { htmlAttributes = new { @class = "form-control" } })

        @Html.ValidationMessageFor(model => model.Quote, "", new { @class = "text-danger" })

    </div>

</div>

*@

```

 

---

 

### 3. **Add an Admin View**

 

**Controller Action:**

```csharp

public ActionResult Admin()

{

    var insurees = db.Insurees.ToList();

    return View(insurees);

}

```

 

**Admin.cshtml Example:**

```html

@model IEnumerable<YourProject.Models.Insuree>

 

<h2>Admin - All Quotes</h2>

<table class="table">

    <tr>

        <th>Name</th>

        <th>Date of Birth</th>

        <th>Car Year</th>

        <th>Car Make</th>

        <th>Car Model</th>

        <th>Speeding Tickets</th>

        <th>DUI</th>

        <th>Coverage Type</th>

        <th>Quote</th>

    </tr>

@foreach (var item in Model)

{

    <tr>

        <td>@item.FirstName @item.LastName</td>

        <td>@item.DateOfBirth.ToShortDateString()</td>

        <td>@item.CarYear</td>

        <td>@item.CarMake</td>

        <td>@item.CarModel</td>

        <td>@item.SpeedingTickets</td>

        <td>@item.DUI</td>

        <td>@item.CoverageType</td>

        <td>@item.Quote.ToString("C")</td>

    </tr>

}

</table>

```

 

---

 

 
